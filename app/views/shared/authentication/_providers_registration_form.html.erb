<div class="registration__actions-providers">
  <% authentication_enabled_providers.each do |provider| %>
    <% next unless display_social_login? %>
    <%= form_with url: provider.sign_in_path(state: "navbar_basic"), class: "flex w-100 provider-#{provider.provider_name}", local: true do |f| %>
      <%= f.button type: :submit, class: "crayons-btn crayons-btn--l crayons-btn--brand-#{provider.provider_name} crayons-btn--icon-left grow-1 whitespace-nowrap" do %>
        <%= inline_svg_tag("#{provider.provider_name}.svg", aria_hidden: true, class: "crayons-icon", title: provider.provider_name) %>
        <%= params[:state] == "new-user" ? "Sign up" : "Continue" %> with <%= provider.official_name %>
      <% end %>
    <% end %>

    <% if provider.provider_name == :facebook %>
      <script>
        window.fbAsyncInit = function() {
          FB.init({
            appId            : <%= Settings::Authentication.facebook_key %>,
            autoLogAppEvents : false,
            version          : 'v11.0'
          });
        };
      </script>
      <script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js"></script>
      <script type="text/javascript">
        // Example POST method implementation:
        async function postData(url = '', data = {}) {
          const response = await fetch(url, {
            method: 'POST',
            cache: 'no-cache',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
          });
          return response.json(); // parses JSON response into native JavaScript objects
        }

        var form = document.querySelector('form.provider-facebook');
        form.onsubmit = function(e) {
          e.preventDefault();
          console.log(e);
          FB.login(function(response) {
            if (response.authResponse) {
              var access_token = response.authResponse.accessToken;
              FB.api('/me', function(response) {
                postData('/async_info/access_token', {
                  uid: response.id,
                  name: response.name,
                  access_token: access_token,
                  provider: 'facebook'
                })
                .then(function(response) {
                  console.log(response); // JSON data parsed by `data.json()` call
                  if (response.redirect) {

                  } else {

                  }
                });
              });
            } else {
              console.log('User cancelled login or did not fully authorize.');
            }
          }, { scope: 'public_profile,email' });
        }
      </script>
    <% end %>
  <% end %>
  <% if params[:state] == "new-user" && Settings::Authentication.allow_email_password_registration && !ForemInstance.invitation_only? %>
    <%= link_to "#{inline_svg_tag('email.svg', aria_hidden: true, class: 'crayons-icon', title: 'email')}Sign up with Email".html_safe,
                request.params.merge(state: "email_signup").except("i"),
                class: "crayons-btn crayons-btn--l crayons-btn--brand-email crayons-btn--icon-left whitespace-nowrap",
                data: { no_instant: "" } %>
  <% end %>
</div>
